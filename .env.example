# ============================================
# HOMESCHOOL EXAM SYSTEM - Environment Variables
# ============================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env to version control!

# ============================================
# NODE ENVIRONMENT
# ============================================
NODE_ENV=production

# ============================================
# DATABASE CONFIGURATION
# ============================================
# Neon PostgreSQL Database URL
# Format: postgresql://user:password@host:port/database?sslmode=require
DATABASE_URL=postgresql://user:password@your-neon-endpoint.neon.tech/database?sslmode=require

# ============================================
# REDIS CONFIGURATION
# ============================================
# Redis URL for caching and session management
# For local development: redis://localhost:6379
# For Docker: redis://redis:6379
REDIS_URL=redis://redis:6379

# ============================================
# SERVER CONFIGURATION
# ============================================
# Port for the backend API
PORT=5000

# ============================================
# JWT AUTHENTICATION
# ============================================
# Generate strong random secrets (min 32 characters)
# Use: openssl rand -base64 32
JWT_SECRET=your_strong_jwt_secret_key_here_minimum_32_characters
JWT_REFRESH_SECRET=your_strong_jwt_refresh_secret_key_here_minimum_32_characters
JWT_EXPIRES_IN=1h
JWT_REFRESH_EXPIRES_IN=7d

# ============================================
# OPENAI CONFIGURATION
# ============================================
# OpenAI API Key for AI-powered features
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-your_openai_api_key_here
OPENAI_MODEL=gpt-4o-mini

# ============================================
# FLUTTERWAVE PAYMENT GATEWAY
# ============================================
# Flutterwave credentials for payment processing
# Get from: https://dashboard.flutterwave.com/
# Use TEST keys for staging, LIVE keys for production

# Public key (can be exposed to frontend)
FLUTTERWAVE_PUBLIC_KEY=FLWPUBK_TEST-your_public_key_here

# Secret key (NEVER expose to frontend)
FLUTTERWAVE_SECRET_KEY=FLWSECK_TEST-your_secret_key_here

# Encryption key for secure data
FLUTTERWAVE_ENCRYPTION_KEY=FLWSECK_TEST-your_encryption_key_here

# Webhook secret for payment notifications
FLUTTERWAVE_WEBHOOK_SECRET=your_webhook_secret_here

# Payment redirect URL (where users return after payment)
FLUTTERWAVE_REDIRECT_URL=http://localhost:5001/payment/callback

# Currency code
FLUTTERWAVE_CURRENCY=RWF

# ============================================
# FRONTEND CONFIGURATION
# ============================================
# Frontend URL (for CORS and redirects)
FRONTEND_URL=http://localhost:5001

# API URL for frontend (MUST start with VITE_ to be embedded at build time)
# For local development: http://localhost:5000/api
# For production: https://your-domain.com/api or http://SERVER_IP:5004/api
VITE_API_URL=http://localhost:5000/api

# ============================================
# EMAIL CONFIGURATION (SMTP)
# ============================================
# SMTP settings for sending emails
# Examples:
#   Gmail: smtp.gmail.com (port 587)
#   Outlook: smtp-mail.outlook.com (port 587)
#   SendGrid: smtp.sendgrid.net (port 587)
#   Mailgun: smtp.mailgun.org (port 587)

SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-specific-password

# ============================================
# GOOGLE OAUTH CONFIGURATION
# ============================================
# Google OAuth credentials for social login
# Get from: https://console.cloud.google.com/apis/credentials

GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# ============================================
# ADMIN ACCOUNT
# ============================================
# Initial admin account credentials (created on first startup)
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=ChangeThisSecurePassword123!

# ============================================
# OPTIONAL CONFIGURATIONS
# ============================================

# Cloudinary (for file uploads)
# CLOUDINARY_CLOUD_NAME=your_cloud_name
# CLOUDINARY_API_KEY=your_api_key
# CLOUDINARY_API_SECRET=your_api_secret

# AWS S3 (alternative file storage)
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-bucket-name

# Logging
# LOG_LEVEL=info

# Rate Limiting
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX_REQUESTS=100

# ============================================
# DEPLOYMENT ENVIRONMENT VARIABLES
# ============================================
# These are typically set in GitHub Secrets or CI/CD environment

# STAGING_SERVER_IP=your.staging.server.ip
# STAGING_SSH_USER=root
# PRODUCTION_SERVER_IP=your.production.server.ip
# PRODUCTION_SSH_USER=root

# ============================================
# NOTES
# ============================================
# 1. Frontend environment variables MUST start with VITE_ prefix
# 2. Generate strong random secrets for JWT (use openssl rand -base64 32)
# 3. Use test keys for staging, production keys for production only
# 4. Never commit this file with real credentials to version control
# 5. Ensure DATABASE_URL includes ?sslmode=require for Neon
# 6. For Gmail SMTP, use App Password, not your regular password
# 7. Verify all URLs match your deployment environment
