version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: homeschool-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - homeschool-network
    command: redis-server --appendonly yes

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: homeschool-backend
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 5000
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      FLUTTERWAVE_PUBLIC_KEY: ${FLUTTERWAVE_PUBLIC_KEY}
      FLUTTERWAVE_SECRET_KEY: ${FLUTTERWAVE_SECRET_KEY}
      FLUTTERWAVE_ENCRYPTION_KEY: ${FLUTTERWAVE_ENCRYPTION_KEY}
      FLUTTERWAVE_WEBHOOK_SECRET: ${FLUTTERWAVE_WEBHOOK_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5001}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
    ports:
      - "5000:5000"
    volumes:
      - ./backend/logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - homeschool-network
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npm start
      "

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:5000/api}
    container_name: homeschool-frontend
    restart: unless-stopped
    ports:
      - "5001:80"
    depends_on:
      - backend
    networks:
      - homeschool-network

volumes:
  redis-data:

networks:
  homeschool-network:
    driver: bridge